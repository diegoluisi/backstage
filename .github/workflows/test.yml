# This workflow uses actions that are not certified by GitHub.
# São fornecidas por terceiros e regidas por
# termos de serviço, política de privacidade e suporte separados
# documentação.

name: test

on: [push]


jobs:
  vars:
    name: Setup environment variables
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - id: vars
        run: |
          if [[ ! "$GITHUB_REF" =~ refs/tags ]]; then
            echo "::set-output name=tag::$(echo $GITHUB_SHA | cut -c 1-8)"
          else
            echo "::set-output name=tag::$(echo $GITHUB_REF | cut -d / -f 3)"
          fi
      - run: echo "${{ steps.vars.outputs.tag }}"

  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs:
      - vars
    steps:
      - uses: actions/checkout@master
      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.1.0
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}

  build:
    name: yarn-build
    runs-on: ubuntu-latest
    steps:
      - name: app checkout
        uses: actions/checkout@v3
      - name: Configure Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: app/node_modules
          key: ${{ hashFiles('app/package.json') }}
      - name: yarn install and build
        run: |
          cd app/
          yarn add --cwd packages/app @backstage/plugin-sonarqube
          yarn install --frozen-lockfile
          yarn tsc
          yarn build
      - name: persist build files
        uses: actions/upload-artifact@v2
        with:
          name: app-folder
          path: app/**/*
          if-no-files-found: error

  build-and-pushs:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - sonarqube
      - build
      - vars
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: restore build files
        uses: actions/download-artifact@v2
        with:
          name: app-folder
          path: app
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build image docker and push
        run: |
          cd app/
          docker image build . -f packages/backend/Dockerfile --tag diegoluisi/backstage:${{ needs.vars.outputs.tag }}
          docker push diegoluisi/backstage:${{ needs.vars.outputs.tag }}
