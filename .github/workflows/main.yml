# This workflow uses actions that are not certified by GitHub.
# São fornecidas por terceiros e regidas por
# termos de serviço, política de privacidade e suporte separados
# documentação.

name: main

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  vars:
    name: Setup environment variables
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - id: vars
        run: |
          if [[ ! "$GITHUB_REF" =~ refs/tags ]]; then
            echo "::set-output name=tag::$(echo $GITHUB_SHA | cut -c 1-8)"
          else
            echo "::set-output name=tag::$(echo $GITHUB_REF | cut -d / -f 3)"
          fi
      - run: echo "${{ steps.vars.outputs.tag }}"

  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs:
      - vars
    steps:
      - uses: actions/checkout@master
      - name: SonarQube Scan
        uses: kitabisa/sonarqube-action@v1.1.0
        with:
          host: ${{ secrets.SONARQUBE_HOST }}
          login: ${{ secrets.SONARQUBE_TOKEN }}

  build:
    name: yarn-build
    runs-on: ubuntu-latest
    steps:
      - name: app checkout
        uses: actions/checkout@v3
      - name: Configure Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: app/node_modules
          key: ${{ hashFiles('package.json') }}
      - name: yarn install and build
        run: |
          cd app/
          yarn add --cwd packages/app @backstage/plugin-sonarqube
          yarn install --frozen-lockfile
          yarn tsc
          yarn build
      - name: persist build files
        uses: actions/upload-artifact@v2
        with:
          name: app-folder
          path: app/**/*
          if-no-files-found: error

  build-and-pushs:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - sonarqube
      - build
      - vars
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: restore build files
        uses: actions/download-artifact@v2
        with:
          name: app-folder
          path: app
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build image docker and push
        run: |
          cd app/
          docker image build . -f packages/backend/Dockerfile --tag diegoluisi/backstage:${{ needs.vars.outputs.tag }}
          docker push diegoluisi/backstage:${{ needs.vars.outputs.tag }}

  # build-and-pushs:
  #   name: Push Docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   needs:
  #     - vars
  #     - sonarqube
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push Docker image
  #       run: |
  #         cd app/
  #         yarn add --cwd packages/app @backstage/plugin-sonarqube
  #         yarn install --frozen-lockfile
  #         yarn tsc
  #         yarn build
  #         docker image build . -f packages/backend/Dockerfile --tag diegoluisi/backstage:${{ needs.vars.outputs.tag }}
  #         docker push diegoluisi/backstage:${{ needs.vars.outputs.tag }}

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: GitOps Deploy
    runs-on: ubuntu-latest
    needs:
      - vars
      - sonarqube
      - build-and-push

    steps:
      - name: Set Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.9.4"

      - name: Clone Argo Repository
        run: git clone https://${REPO_TOKEN}@github.com/diegoluisi/argo.git .
        env:
          REPO_TOKEN: ${{secrets.ACCESS_TOKEN_GITHUB}}

      - name: Update Backstage Tag Image
        run: |
          cd apps/backstage/overlays/prd
          kustomize edit set image diegoluisi/backstage:${{ needs.vars.outputs.tag }}

      - name: Commit Changes
        run: |
          git version
          git add .
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m ":robot: [GitHub Action] Set new image tag to https://github.com/diegoluisi/backstage/commit/${{ needs.vars.outputs.tag }}"

      - name: Push changes
        run: git push

  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - vars
      - sonarqube
      - build-and-push
      - deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.ACCESS_TOKEN_GITHUB}}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          # Optional Input
          channel: "github-notifications"
          name: "github-notifications"
          # icon_emoji: ':poop:'
          icon_url: "${{ secrets.SLACK_ICON }}"
